on:
  push:
    branches: [ master ]

name: Upload Release

jobs:
  build:
    name: Upload Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          chmod +x ./gradlew
          ./gradlew build
      - name: Extract Short SHA hash
        shell: bash
        run: echo "##[set-output name=sha;]$(echo ${GITHUB_SHA:0:7})"
        env:
          GITHUB_SHA: ${{ github.sha }}
        id: extract_ssha
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: C_${{ steps.extract_ssha.outputs.sha }}
          release_name: Commit ${{ steps.extract_ssha.outputs.sha }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./build/libs/throwable-1.0-SNAPSHOT.jar
          asset_name: throwable-COMMIT_RELEASE-${{ steps.extract_ssha.outputs.sha }}.jar
          asset_content_type:  	application/java-archive